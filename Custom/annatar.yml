id: annatar
name: annatar
description: "The fastest just-in-time torrent/debrid search add-on for Stremio providing results in under 2-3s."
language: en-US
type: public
encoding: UTF-8
followredirect: false
testlinktorrent: false
requestDelay: 2
links:
  - https://annatar.elfhosted.com
  - http://annatar:8000
caps:
  categories:
    Movies: Movies
    TV: TV
  modes:
    search: [q]
    movie-search: [q, imdbid]
    tv-search: [q, imdbid, season, ep]
  allowrawsearch: false
settings:
  - name: debrid_provider_key
    type: text
    label: Debrid provider API Key
    default: "YOUR_DEBRID_API_KEY" #Replace with your original Debrid Provider Key
  - name: debrid_provider
    type: text
    label: Debrid provider
    default: real_debrid
  - name: validate_imdb_movie
    type: text
    label: IMDB ID of Movie to use for Radarr validation (must exist in indexer)
    default: "tt0137523" # Fight Club
  - name: validate_imdb_tv
    type: text
    label: IMDB ID TV show to use for Sonarr validation (must exist in indexer)
    default: "tt9288030" # Reacher S02E01
  - name: limit
    type: text
    label: Maximum Resuts Allowed Per Resolution 15
    default: 10 # Default limit
  - name: default_season
    type: text
    label: Default Season
    default: 1
  - name: default_episode
    type: text
    label: Default Episode
    default: 1
search:
  paths:
    - path: "{{ if .Query.IMDBID }}/search/cached/{{ .Config.debrid_provider }}/movie/{{ .Query.IMDBID }}?debrid_api_key={{ .Config.debrid_provider_key }}&limit={{ .Config.limit }}{{ else }}/search/cached/{{ .Config.debrid_provider }}/movie/{{ .Config.validate_imdb_movie }}?debrid_api_key={{ .Config.debrid_provider_key }}&limit={{ .Config.limit }}{{ end }}"
      method: get
      response:
        type: json
        noResultsMessage: '"streams": []'
      categories: [Movies]

    - path: "{{ if and .Query.IMDBID .Query.Ep }}/search/cached/{{ .Config.debrid_provider }}/series/{{ .Query.IMDBID }}?season={{ .Query.Season }}&episode={{ .Query.Ep }}&limit={{ .Config.limit }}&debrid_api_key={{ .Config.debrid_provider_key }}{{ else }}/search/cached/{{ .Config.debrid_provider }}/series/{{ .Config.validate_imdb_tv }}?season={{ .Config.default_season }}&episode={{ .Config.default_episode }}&limit={{ .Config.limit }}&debrid_api_key={{ .Config.debrid_provider_key }}{{ end }}"
      method: get
      response:
        type: json
        noResultsMessage: '"streams": []'
      categories: [TV]

  rows:
    selector: streams
    missingAttributeEqualsNoResults: true
  fields:
    title:
      selector: title
      filters:
        - name: split
          args: ["\n", 0]
    details:
      selector: url
    year:
      selector: title
      filters:
        - name: regexp
          args: "(\\b(19|20)\\d\\d\\b)"
    category_is_tv_show:
      text: "{{ .Result.title }}"
      filters:
        - name: regexp
          args: "\\b(S\\d+(?:E\\d+)?)\\b"
    category:
      text: "{{ if .Result.category_is_tv_show }}TV{{ else }}Movies{{ end }}"
    infohash:
      selector: url
      filters:
        - name: split
          args: ["/", 5]
    size:
      selector: title
      filters:
        - name: regexp
          args: "\\b(\\d+(?:\\.\\d+)? [MG]B)\\b"
